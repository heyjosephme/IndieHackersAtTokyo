---
import { AnimatedTitle } from "./AnimatedTitle";
import { motion } from "framer-motion";

// Get next Sunday in JST
function getNextSunday() {
  const today = new Date();
  // Convert to JST (UTC+9)
  const jstDate = new Date(today.getTime() + 9 * 60 * 60 * 1000);
  const daysUntilSunday = (7 - jstDate.getDay()) % 7;
  const nextSunday = new Date(
    jstDate.getTime() + daysUntilSunday * 24 * 60 * 60 * 1000
  );

  // Format date: "February 18"
  return nextSunday.toLocaleDateString("en-US", {
    month: "long",
    day: "numeric",
    timeZone: "Asia/Tokyo",
  });
}

const nextEventDate = getNextSunday();
const weekdayPlace = "Sunday @ Shibuya";
---

<section class="relative min-h-screen bg-background overflow-hidden">
  <!-- Enhanced background animations -->
  <div class="absolute inset-0 overflow-hidden">
    <div
      class="absolute w-[500px] h-[500px] -top-32 -left-32 bg-primary/10 rounded-full blur-3xl animate-blob-slow"
    >
    </div>
    <div
      class="absolute w-[400px] h-[400px] top-1/2 right-0 bg-accent/10 rounded-full blur-3xl animate-blob-slow animation-delay-2000"
    >
    </div>
    <div
      class="absolute w-[600px] h-[600px] -bottom-32 -left-32 bg-secondary/10 rounded-full blur-3xl animate-blob-slow animation-delay-4000"
    >
    </div>
  </div>

  <!-- Animated noise overlay -->
  <div class="absolute inset-0 opacity-[0.015] noise-bg"></div>

  <!-- Content -->
  <div
    class="relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 pt-32 pb-16 text-center"
  >
    <!-- Event Date Card with enhanced animation -->
    <div
      class="inline-block mb-12 transform hover:scale-105 transition-all duration-300 hover:shadow-2xl"
    >
      <div
        class="px-8 py-4 backdrop-blur-lg bg-card/10 rounded-2xl border border-border shadow-xl relative overflow-hidden group"
      >
        <div
          class="absolute inset-0 bg-primary/5 translate-y-full group-hover:translate-y-0 transition-transform duration-500"
        >
        </div>
        <p class="text-sm font-medium text-muted-foreground">Next Meetup</p>
        <p class="mt-1 text-2xl font-bold text-primary">
          {nextEventDate}
        </p>
        <p class="mt-1 text-sm text-muted-foreground">{weekdayPlace}</p>
      </div>
    </div>

    <!-- Main Title -->
    <AnimatedTitle client:load />

    <!-- Enhanced glowing line -->
    <div class="relative w-24 h-1 mx-auto mt-8">
      <div class="absolute inset-0 bg-primary rounded-full animate-glow"></div>
      <div
        class="absolute inset-0 bg-primary/50 rounded-full animate-pulse-slow"
      >
      </div>
    </div>

    <!-- Description with character animation -->
    <p
      class="mt-12 text-xl text-muted-foreground max-w-3xl mx-auto leading-relaxed split-chars"
    >
      Join Tokyo's most active community of independent developers, creators,
      and entrepreneurs. Share ideas, get feedback, and build your next big
      thing!
    </p>
  </div>
</section>

<style>
  /* Enhanced blob animation */
  @keyframes blob-slow {
    0%,
    100% {
      transform: translate(0, 0) scale(1);
    }
    25% {
      transform: translate(20px, -30px) scale(1.05);
    }
    50% {
      transform: translate(-20px, 20px) scale(0.95);
    }
    75% {
      transform: translate(30px, 30px) scale(1.05);
    }
  }

  @keyframes pulse-slow {
    0%,
    100% {
      transform: scale(1);
      opacity: 0.5;
    }
    50% {
      transform: scale(1.5);
      opacity: 0.2;
    }
  }

  .animate-blob-slow {
    animation: blob-slow 20s infinite;
  }

  .animate-pulse-slow {
    animation: pulse-slow 3s infinite;
  }

  /* Noise background */
  .noise-bg {
    background: url("data:image/svg+xml,%3Csvg viewBox='0 0 400 400' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.8' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
    pointer-events: none;
  }

  /* Character split animation */
  .split-chars {
    opacity: 0;
    animation: fadeInUp 1s ease forwards 1s;
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Existing animations */
  @keyframes glow {
    0%,
    100% {
      opacity: 1;
      box-shadow: 0 0 20px var(--primary);
    }
    50% {
      opacity: 0.6;
      box-shadow: 0 0 40px var(--primary);
    }
  }

  .animate-glow {
    animation: glow 3s infinite;
  }
</style>

<script>
  // Split text animation
  document.querySelectorAll(".split-chars").forEach((element) => {
    const text = element.textContent || "";
    element.textContent = "";

    [...text].forEach((char, i) => {
      const span = document.createElement("span");
      span.textContent = char;
      span.style.opacity = "0";
      span.style.animation = `fadeInUp 0.5s ease forwards ${i * 0.02}s`;
      element.appendChild(span);
    });
  });
</script>
